{"version":3,"sources":["Components/DateCard/index.js","Components/Calendar/index.js","Components/CalendarButton/index.js","Components/Search/index.js","Utils/dateFromatter.js","Utils/constant.js","Components/Header/index.js","Components/TableDetails/index.js","Components/DateModal/index.js","Components/AddEventModal/index.js","Components/EventModal/index.js","store/DateEvent/actions.js","store/DateEvent/constants.js","Components/Firebase/firebase.js","Components/Loader/index.js","Containers/PersonalCalendars/index.js","Components/Firebase/index.js","App.js","store/sagas.js","store/DateEvent/reducers.js","store/reducers.js","index.js","store/index.js"],"names":["DateCard","props","className","day","textClassName","onClick","onDateClick","date","formattedDate","isActive","events","slice","map","event","index","length","onEventClick","name","onSeeMoreClick","Calendar","dateColumn","dateArr","selectedDay","selectedEvent","isToday","CalendarButton","SearchField","options","autoCompleteData","autoFocus","placeholder","prefix","title","SearchOutlined","suffix","CalendarOutlined","getMonthString","month","getMonthObj","dateText","split","dd","mm","yyyy","monthText","indexOf","compText","Date","getDaysInMonth","currentMonth","todayDates","monthStart","dateFns","monthEnd","startDate","endDate","rows","days","tempDay","i","push","getDate","getMonth","getFullYear","some","today","EVENT_TYPES","key","icon","MONTHS","Option","Select","Header","getToday","navMonth","LeftOutlined","RightOutlined","defaultValue","currentDate","onChange","onChangeMonth","value","onChangeYear","Array","fill","__","Search","onSearch","onSelect","TableDetails","style","marginTop","loading","dataSource","active","columns","pagination","bordered","DateModal","tableColumns","dataIndex","render","record","onTitleClick","display","selectedDate","width","AddEventModal","useState","setName","description","setDescription","moment","format","time","setTime","timeMoment","setTimeMoment","duration","setDuration","eventType","setEventType","durationReq","durationType","errorObj","setErrorObj","resetDefault","useEffect","switchAddEventModalState","okText","onOk","handleSaveEvent","onCancel","onClose","e","text","target","type","find","placeHolder","timeString","test","EventModal","class","getEventType","getMonthDateArray","payload","addEvent","saveFetchedEvents","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Loader","PersonalCalendars","setState","dateEventActions","state","ditection","option","year","prevState","showAddEventModal","showDateModal","showEventModal","wasDateModalOpened","eventId","uuid","database","ref","set","fetchAllEvents","orderByValue","on","snapshot","eventsObj","val","Object","keys","searcher","FuzzySearch","dateEvent","caseSensitive","search","this","monthDateArray","visible","React","Component","connect","OriginalComponent","store","dispatch","bindActionCreators","DateEventActions","App","root","fork","dateEventList","INITIAL_STATE","reducer","action","monthDateArrayTemp","week","filter","element","monthArray","history","combineReducers","DateEventReducer","createHistory","initialState","sagaMiddleware","createSagaMiddleware","routeMiddleware","routerMiddleware","createStore","createRootReducers","compose","applyMiddleware","run","sagas","buildStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ace74839.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nconst DateCard = props => (\n    <div  className=\"card-container\">\n            {props.day?\n                <div className={props.textClassName}>{props.day}</div>\n                :  <div className={props.textClassName}>\n                    <div className=\"date-text\" onClick={() => props.onDateClick(props.date)}>{props.formattedDate}</div>\n                    {props.isActive && props.events && props.events.slice(0,3).map((event, index) => {\n                        return index ===2 && props.events.length>3?\n                            <p className=\"content-para-2\">\n                                <p className=\"content-para\" onClick={() => props.onEventClick(event)}>{event.name}</p>\n                                <p className=\"more-text\" onClick={() => props.onSeeMoreClick(props.date)}>  ...more</p>\n                            </p>\n                            : <p className=\"content-para\" onClick={() => props.onEventClick(event)}>{event.name}</p>\n                    })}\n                </div>\n            }\n    </div>\n);\n\nexport default DateCard;","import React from 'react';\nimport DateCard from '../DateCard/index';\nimport { Row } from 'antd';\nimport './style.css';\n\nconst Calendar = props => (\n    <div className='calendar-container'>\n        <Row className='calendar-days-row'>\n            {['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(day=> <DateCard textClassName='day-card' day={day}/>)}\n        </Row>\n        {props.dateColumn.map(dateArr => (\n            <Row className='calendar-date-rows'>\n                {dateArr.map(date => \n                    <DateCard\n                        onDateClick={selectedDay => { if(date.isActive) props.onDateClick(selectedDay) }}\n                        onSeeMoreClick={selectedDay => props.onSeeMoreClick(selectedDay)}\n                        onEventClick={selectedEvent => props.onEventClick(selectedEvent)}\n                        formattedDate={date.formattedDate}\n                        isActive={date.isActive}\n                        events={date.events}\n                        date={date}\n                        textClassName={\n                            date.isActive?\n                                date.isToday? \n                                    'today-date-card'\n                                    : 'date-card'\n                                : 'blocked-date-card'\n                        }\n                    />\n                )}\n            </Row>\n        ))}\n    </div>\n)\n\nexport default Calendar;\n","import React from 'react';\nimport { Button } from 'antd';\nimport './style.css';\n\nconst CalendarButton = props => (\n    <Button \n        {...props}\n    />\n)\n\nexport default CalendarButton;\n","import React from 'react';\nimport { Input, Tooltip, AutoComplete } from 'antd';\nimport { SearchOutlined, CalendarOutlined } from '@ant-design/icons';\nimport './style.css';\n\nconst SearchField = props => (\n        <AutoComplete \n            {...props}\n            options={props.autoCompleteData}\n            autoFocus\n        >\n        <Input \n            placeholder=\"Search Events\"\n            className='autocomplete-input'\n            prefix={\n                <Tooltip title=\"Search Event\">\n                    <SearchOutlined className=\"search-icon\"/>\n                </Tooltip>\n            }\n            suffix={<CalendarOutlined />}\n        />\n        </AutoComplete>\n)\n\nexport default SearchField;\n","import * as dateFns from 'date-fns';\n\nexport function getMonthString(month) {\n    const monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return monthArr[month];\n}\n\nexport function getMonthObj(dateText) {\n  const monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const [ dd, mm, yyyy ] = dateText.split(' ');\n  const monthText = monthArr.indexOf(mm)+1;\n  const compText = `${monthText}/${dd}/${yyyy}`;\n  return new Date(compText);\n}\n\nexport function getDaysInMonth(currentMonth, todayDates) {\n    const monthStart = dateFns.startOfMonth(currentMonth);\n    const monthEnd = dateFns.endOfMonth(monthStart);\n    const startDate = dateFns.startOfWeek(monthStart);\n    const endDate = dateFns.endOfWeek(monthEnd);\n    const dateFormat = \"d\";\n    const rows = [];\n\n    let days = [];\n    let formattedDate = '';\n    for (let day = startDate; day <= endDate; day = dateFns.addDays(day, 1)) {\n      const tempDay = day;\n      for (let i = 0; i < 7; i++) {\n        formattedDate = dateFns.format(day, dateFormat);\n        days.push({ \n          formattedDate,\n          day,\n          dateText: day.getDate()+\" \"+getMonthString(day.getMonth())+\" \"+day.getFullYear(),\n          events: [],\n          isToday:  todayDates.some(today => dateFns.isSameDay(tempDay, today)),\n          isActive:  dateFns.isSameMonth(day, currentMonth),\n        });\n        day = dateFns.addDays(day, 1);\n      }\n      rows.push(days);\n      days = [];\n    }\n    return rows;\n}","export const EVENT_TYPES = [\n    { name: 'Birthday', key: 'b_day', icon: 'fas fa-birthday-cake' },\n    { name: 'Anniversary', key: 'anniversary', icon: 'fas fa-ring' },\n    { name: 'Meeting', key: 'meeting', icon: 'far fa-handshake' },\n    { name: 'Conference', key: 'conference', icon: 'fas fa-users' },\n    { name: 'Others', key: 'others', icon: 'fas fa-info-circle' },\n]\n\nexport const MONTHS = [\n    { name: 'January', key: 'jan', index: 0 },\n    { name: 'February', key: 'feb', index: 1},\n    { name: 'March', key: 'march', index: 2 },\n    { name: 'April', key: 'apr', index: 3 },\n    { name: 'May', key: 'may', index: 4 },\n    { name: 'June', key: 'jun', index: 5 },\n    { name: 'July', key: 'jul', index: 6 },\n    { name: 'August', key: 'aug', index: 7 },\n    { name: 'September', key: 'sep', index: 8 },\n    { name: 'October', key: 'oct', index: 9 },\n    { name: 'November', key: 'nov', index: 10 },\n    { name: 'December', key: 'dec', index: 11 },\n]","import React from 'react';\nimport { Select } from 'antd';\nimport CalendarButton from '../CalendarButton/index';\nimport Search from './../Search/index';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport { getMonthString } from './../../Utils/dateFromatter';\nimport { MONTHS } from './../../Utils/constant';\nimport './style.css';\nconst { Option } = Select;\n\nconst Header = props => (\n    <div className=\"calendar-header-container\">\n        <div className='calendar-header-left'>\n            <div  className='calendar-header-top-left'>\n                <CalendarButton className=\"today-button\" onClick={props.getToday}>Today</CalendarButton>\n                <span>\n                    <CalendarButton className=\"nav-button\" onClick={() => props.navMonth('prev')}><LeftOutlined /></CalendarButton>\n                    <CalendarButton className=\"nav-button\" onClick={() => props.navMonth('next')}><RightOutlined /></CalendarButton>\n                </span>\n            </div>\n            <div  className='calendar-header-top-right'>\n                <Select \n                    className=\"search-month-year-input\" \n                    defaultValue={getMonthString(props.currentDate.getMonth())} \n                    onChange={props.onChangeMonth}\n                >\n                    {MONTHS.map(month => <Option {...month} value={month.name}>{month.name}</Option>)}\n                </Select>\n                <Select \n                    className=\"search-month-year-input\" \n                    defaultValue={props.currentDate.getFullYear()} \n                    onChange={props.onChangeYear}\n                >\n                    {Array(130).fill(null).map((__, index) => <Option index={index} value={index+1970}>{index+1970}</Option>)}\n                </Select>\n            </div>\n        </div>\n        <div className='calendar-header-right'>\n            <Search \n                className=\"search-input\"\n                onSearch={props.onSearch}\n                onSelect={props.onSelect}\n                autoCompleteData={props.autoCompleteData}\n            />\n        </div>\n    </div>\n);\n\nexport default Header;","import React from 'react';\nimport { Table, Skeleton } from 'antd';\nimport './style.css';\n\nconst TableDetails = props => {\n  return (\n    <div style={{ marginTop: '25px' }}>\n      {props.loading && props.dataSource.length<31?\n        <Skeleton \n          loading={true}\n          active\n        />\n        : <Table \n        {...props}\n        dataSource={props.dataSource}\n        columns={props.columns}\n        pagination={false}\n        bordered\n        />}\n    </div>\n  );\n};\n\nexport default TableDetails;\n","import React from 'react';\nimport { Modal } from 'antd';\nimport TableDetails from '../TableDetails/index';\nimport { CalendarOutlined } from '@ant-design/icons';\n\nimport './style.css';\n\nconst DateModal = props => {\n    const tableColumns = [\n        {\n            title: <div className=\"event-list-header\">Name</div>,\n            dataIndex: 'name',\n            key: 'name',\n            render: (value, record) => (\n                <div className=\"event-modal-title\" onClick={() => props.onTitleClick(record)}>{value}</div>\n            ),\n        },\n        {\n            title: <div className=\"event-list-header\">Time</div>,\n            dataIndex: 'time',\n            key: 'time',\n            render: (value, record) => (\n                <div className=\"event-modal-title\">{value}</div>\n            ),\n        },\n        {\n            title: <div className=\"event-list-header\">Description</div>,\n            dataIndex: 'description',\n            key: 'description',\n            render: (value, record) => (\n                <div className=\"event-modal-title\">{value}</div>\n            ),\n        },\n        {\n            title: <div className=\"event-list-header\">Duration</div>,\n            dataIndex: 'duration',\n            key: 'duration',\n            render: (value, record) => (\n                <div className=\"event-modal-title\">{value}</div>\n            ),\n        },\n    ];\n    return (\n        <Modal\n            {...props}\n            title={\n                <div style={{ display: 'flex' }}>\n                    <CalendarOutlined className='date-modal-calendar-icon'/>\n                    <div className=\"date-modal-title\">Events on {props.selectedDate.dateText}</div>\n                </div>\n            }\n        >\n            <TableDetails \n                width={600}\n                dataSource={props.selectedDate.events || []}\n                columns={tableColumns}\n            />\n        </Modal>\n    );\n};\n\nexport default DateModal;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { Modal, Input, Select, TimePicker } from 'antd';\nimport { EVENT_TYPES } from './../../Utils/constant';\nimport './style.css';\nconst { Option } = Select;\n\nconst AddEventModal = props => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [time, setTime] = useState(moment().format(\"hh:mm A\"));\n    const [timeMoment, setTimeMoment] = useState(moment());\n    const [duration, setDuration] = useState('');\n    const [eventType, setEventType] = useState({ name: 'Meeting', key: 'meeting' });\n    const [errorObj, setErrorObj] = useState({\n        name: false,\n        description: false,\n        durationReq: false,\n        durationType: false,\n    });\n\n    useEffect(() => {\n        resetDefault();\n    }, [props.switchAddEventModalState])\n\n    function resetDefault() {\n        setName('');\n        setDescription('');\n        setTime(moment().format(\"hh:mm A\"));\n        setTimeMoment(moment());\n        setDuration('');\n        setEventType({ name: 'Meeting', key: 'meeting' });\n        setErrorObj({\n            name: false,\n            description: false,\n            durationReq: false,\n            durationType: false,\n        });\n    }\n\n    function onClose() {\n        resetDefault();\n        props.onClose();\n    }\n\n    function onChange(time, timeString) {\n        setTime(timeString);\n        setTimeMoment(time);\n    }\n\n    function onChangeName(text) {\n        setErrorObj({ ...errorObj, name: text.length === 0 });\n        setName(text);\n    }\n\n    function onChangeDescription(text) {\n        setErrorObj({ ...errorObj, description: text.length === 0 });\n        setDescription(text);\n    }\n\n    function onChangeDuration(text) {\n        var reg = /^\\d+$/;\n        if (text.length === 0 || reg.test(text)) {\n            setErrorObj({\n                ...errorObj,\n                durationReq: text.length === 0,\n                durationType: false,\n            });\n            setDuration(text);\n        } else {\n            setErrorObj({\n                ...errorObj,\n                durationType: true,\n            });\n        }\n    }\n\n    function onChangeEventType(type) {\n        setEventType(EVENT_TYPES.find(event => event.name===type));\n    }\n\n    function handleSaveEvent() {\n        if (name!=='' && description!=='' && time!=='') {\n            setErrorObj({\n                name: false,\n                description: false,\n                durationReq: false,\n                durationType: false,\n            });\n            props.handleSaveEvent({\n                name,\n                description,\n                time,\n                duration,\n                eventType,\n                date: props.selectedDate.day,\n            });\n        } else {\n            setErrorObj({\n                ...errorObj,\n                name: name==='',\n                description: description==='',\n                durationReq: duration==='',\n            });\n        }\n    }\n\n    return (\n        <Modal\n            {...props}\n            title={\n                <div className=\"date-modal-title\">Add Event on {props.selectedDate.dateText}</div>\n            }\n            okText={'Save Event'}\n            onOk={() => handleSaveEvent()}\n            onCancel={onClose}\n        >\n            <div className=\"add-event-key-container\">\n                <div className=\"add-event-title\">Event Name:</div>\n                <Input\n                    value={name}\n                    onChange={e => onChangeName(e.target.value)}\n                />\n                {errorObj.name?<div className=\"add-event-error-msg\">** Required</div>: null}\n            </div>\n            <div className=\"add-event-key-container\">\n                <div className=\"add-event-title\">Event Description:</div>\n                <Input\n                    value={description}\n                    onChange={e => onChangeDescription(e.target.value)}\n                />\n                {errorObj.description?<div className=\"add-event-error-msg\">** Required</div>: null}\n            </div>\n            <div className=\"add-event-key-container\">\n                <div className=\"add-event-title\">Event Type:</div>\n                <Select defaultValue='Meeting' onChange={onChangeEventType}>\n                    {EVENT_TYPES.map(type => <Option key={type.key} value={type.name}>{type.name}</Option>)}\n                </Select>\n            </div>\n            <div className=\"add-event-key-container\">\n                <div className=\"add-event-title\">Select the event time:</div>\n                <TimePicker\n                    placeHolder=\"Select Event Time\"\n                    onChange={onChange}\n                    value={timeMoment}\n                    format='hh:mm A'\n                />\n            </div>\n            <div className=\"add-event-key-container\">\n                <div className=\"add-event-title\">Event Duration (in hrs):</div>\n                <Input\n                    value={duration}\n                    onChange={e => onChangeDuration(e.target.value)}\n                />\n                {errorObj.durationReq?<div className=\"add-event-error-msg\">** Required</div>: null}\n                {errorObj.durationType?<div className=\"add-event-error-msg\">** Number only</div>: null}\n            </div>\n        </Modal>\n    );\n};\n\nexport default AddEventModal;\n","import React from 'react';\nimport { Modal } from 'antd';\nimport { EVENT_TYPES } from './../../Utils/constant';\nimport './style.css';\n\nconst EventModal = props => {\n    const getEventType = () => {\n        const key = props.selectedEvent.eventType && props.selectedEvent.eventType.key;\n        const eventType = EVENT_TYPES.find(event => event.key===key);\n        return eventType && (\n            <>\n                <i class={eventType.icon+'  event-modal-title-icon'} />\n                <div className='event-modal-title-text'>{eventType.name}</div>\n            </>\n        );\n    }\n\n    return (\n        <Modal\n            {...props}\n            title={\n                <div className=\"event-modal-title-container\">{props.selectedEvent && getEventType()} Event</div>\n            }\n        >\n            <div className=\"event-modal-container\">\n                <div className='event-modal-row'>\n                    <i class=\"fas fa-signature event-modal-icon\" />\n                    <div className='event-modal-text'>{props.selectedEvent && props.selectedEvent.name}</div>\n                </div>\n                <div className='event-modal-row'>\n                    <i class=\"fas fa-sticky-note event-modal-icon\" />\n                    <div className='event-modal-text'>{props.selectedEvent && props.selectedEvent.description}</div>\n                </div>\n                <div className='event-modal-row'>\n                    <i class=\"fas fa-clock event-modal-icon\" />\n                    <div className='event-modal-text'>{props.selectedEvent && props.selectedEvent.time}</div>\n                </div>\n                <div className='event-modal-row'>\n                    <i class=\"fas fa-stopwatch event-modal-icon\" />\n                    <div className='event-modal-text'>{props.selectedEvent && `${props.selectedEvent.duration} ${props.selectedEvent.duration <2? 'hour': 'hours'}`}</div>\n                </div>\n                <div className='event-modal-row'>\n                    <i class=\"far fa-calendar-alt event-modal-icon\" />\n                    <div className='event-modal-text'>{props.selectedEvent && props.selectedEvent.dateText}</div>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default EventModal;\n","import { \n    GET_MONTH_DATE_ARRAY,\n    ADD_EVENT,\n    SAVE_FETCHED_EVENTS,\n} from './constants';\n\nexport function getMonthDateArray(payload) {\n    return {\n        type: GET_MONTH_DATE_ARRAY,\n        payload,\n    }\n}\n\nexport function addEvent(payload) {\n    return {\n        type: ADD_EVENT,\n        payload,\n    }\n}\n\nexport function saveFetchedEvents(payload) {\n    return {\n        type: SAVE_FETCHED_EVENTS,\n        payload,\n    }\n}","export const GET_MONTH_DATE_ARRAY = 'GET_MONTH_DATE_ARRAY';\nexport const ADD_EVENT = 'ADD_EVENT';\nexport const SAVE_FETCHED_EVENTS = 'SAVE_FETCHED_EVENTS';","import firebase from 'firebase';\n\nconst config = {\n    apiKey: 'AIzaSyCm0C0Dr2ppiVi1WKMweHW1psRBMOgnxuo',\n    authDomain: 'calendar-app-f0c88.firebaseapp.com',\n    databaseURL: 'https://calendar-app-f0c88.firebaseio.com',\n    projectId: 'calendar-app-f0c88',\n    storageBucket: 'calendar-app-f0c88.appspot.com',\n    messagingSenderId: '1022865556679',\n    appId: '1:1022865556679:web:b2f3ea221012800f8ceae2',\n    measurementId: 'G-L01KHTCQ8L',\n};\n\nfirebase.initializeApp(config);\nexport default firebase;\n","import React from 'react';\nimport './style.css';\n\nconst Loader = () => (\n    <i class=\"fas fa-spin fa-cog calendar-loader\"></i>\n);\n\nexport default Loader;","import  React from 'react' ;\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport * as dateFns from 'date-fns';\nimport { uuid } from 'uuidv4';\nimport FuzzySearch from 'fuzzy-search';\nimport Calendar from './../../Components/Calendar/index';\nimport Header from './../../Components/Header/index';\nimport DateModal from './../../Components/DateModal/index';\nimport AddEventModal from './../../Components/AddEventModal/index';\nimport EventModal from './../../Components/EventModal/index';\nimport * as DateEventActions from '../../store/DateEvent/actions';\nimport withFirebase from './../../Components/Firebase/index';\nimport Loader from './../../Components/Loader/index';\nimport { getDaysInMonth, getMonthObj } from './../../Utils/dateFromatter';\nimport './style.css';\n\nclass PersonalCalendars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todayDates: [new Date()],\n            currentDate: new Date(),\n            selectedDate: {},\n            showAddEventModal: false,\n            showDateModal: false,\n            showEventModal: false,\n            switchAddEventModalState: false,\n            autoCompleteData: [],\n            wasDateModalOpened: false,\n        };\n    }\n\n    getToday = () => {\n        this.setState({\n            currentDate: new Date(),\n            todayDates: [new Date()],\n        });\n        this.props.dateEventActions.getMonthDateArray(getDaysInMonth(new Date(), this.state.todayDates));\n    }\n\n    navMonth = (ditection) => {\n        const currentDate = ditection === 'prev'? \n            new Date(dateFns.format(dateFns.subMonths(this.state.currentDate, 1), 'MM/dd/yyyy'))\n            : new Date(dateFns.format(dateFns.addMonths(this.state.currentDate, 1), 'MM/dd/yyyy'));\n        this.setState({ currentDate, todayDates: [new Date()] });\n        this.props.dateEventActions.getMonthDateArray(getDaysInMonth(currentDate, this.state.todayDates));\n    }\n\n    onChangeMonth = (value, option) => {\n        const currentDate = dateFns.setMonth(this.state.currentDate, option.index);\n        this.setState({ currentDate, todayDates: [new Date()] });\n        this.props.dateEventActions.getMonthDateArray(getDaysInMonth(currentDate, this.state.todayDates));\n    }\n    \n    onChangeYear = (year) => {\n        const currentDate = dateFns.setYear(this.state.currentDate, year);\n        this.setState({ currentDate, todayDates: [new Date()] });\n        this.props.dateEventActions.getMonthDateArray(getDaysInMonth(currentDate, this.state.todayDates));\n    }\n\n    onDateClick = selectedDay => {\n        this.setState(prevState => ({ \n            showAddEventModal: !prevState.showAddEventModal,\n            selectedDate: !prevState.showAddEventModal? selectedDay: {},\n        }));\n    }\n\n    onSeeMoreClick = selectedDay => {\n        this.setState(prevState => ({ \n            showDateModal: !prevState.showDateModal,\n            selectedDate: !prevState.showDateModal? selectedDay: {},\n        }));\n    }\n\n    onEventClick = selectedEvent => {\n        this.setState(prevState => ({ \n            showEventModal: !prevState.showEventModal,\n            selectedEvent: !prevState.showEventModal? selectedEvent: {},\n            showDateModal: prevState.wasDateModalOpened,\n            wasDateModalOpened: false,\n        }));\n    }\n\n    onTitleClick  = selectedEvent => {\n        this.setState(prevState => ({ \n            showEventModal: !prevState.showEventModal,\n            selectedEvent: !prevState.showEventModal? selectedEvent: {},\n            showDateModal: false,\n            wasDateModalOpened: true,\n        }));\n    }\n\n    handleSaveEvent = event => {\n        const eventId = uuid();\n        this.props.firebase.database().ref('events/' + eventId).set({\n            dateText: this.state.selectedDate.dateText,\n            description: event.description,\n            duration: event.duration,\n            eventType: event.eventType,\n            name: event.name,\n            time: event.time,\n        });\n        this.setState(prevState=>({ \n            showAddEventModal: !prevState.showAddEventModal,\n            selectedDate: !prevState.showAddEventModal? this.state.selectedDate: {},\n            switchAddEventModalState: !prevState.switchAddEventModalState,\n        }));\n    }\n\n    fetchAllEvents = () => {\n        const dateEventActions = this.props.dateEventActions;\n        const eventRef = this.props.firebase.database().ref('events');\n        eventRef.orderByValue().on(\"value\", function(snapshot) {\n            const eventsObj = snapshot.val();\n            dateEventActions.saveFetchedEvents(Object.keys(eventsObj).map(key => ({ ...eventsObj[key], key })));\n        });\n    }\n\n    onSearch = text => {\n        const searcher = new FuzzySearch(this.props.dateEvent.events, ['name', 'description'], {caseSensitive: false});\n        this.setState({ \n            autoCompleteData: searcher.search(text).map(event => ({ ...event, value: event.name })),\n        });\n    }\n    \n    onSelect = (value, option) => {\n        this.setState({ currentDate: getMonthObj(option.dateText), todayDates: [new Date(), new Date(option.dateText)] });\n        this.props.dateEventActions.getMonthDateArray(getDaysInMonth(getMonthObj(option.dateText), [new Date(), new Date(option.dateText)]));\n    }\n\n    render() {\n        return (\n            <div className=\"personal-calendar-container\">\n                {this.props.dateEvent.loading ?\n                <Loader />\n                : <>\n                    <Header \n                        currentDate={this.state.currentDate}\n                        navMonth={this.navMonth}\n                        onChangeMonth={this.onChangeMonth}\n                        onChangeYear={this.onChangeYear}\n                        getToday={this.getToday}\n                        onSearch={this.onSearch}\n                        onSelect={this.onSelect}\n                        autoCompleteData={this.state.autoCompleteData}\n                    />\n                    <Calendar \n                        dateColumn={this.props.dateEvent.monthDateArray}\n                        currentDate={this.state.currentDate}\n                        onDateClick={this.onDateClick}\n                        onSeeMoreClick={this.onSeeMoreClick}\n                        onEventClick={this.onEventClick}\n                    />\n                    <AddEventModal \n                        visible={this.state.showAddEventModal}\n                        handleSaveEvent={this.handleSaveEvent}\n                        onClose={this.onDateClick}\n                        selectedDate={this.state.selectedDate}\n                        switchAddEventModalState={this.state.switchAddEventModalState}\n                    />\n                    <DateModal \n                        visible={this.state.showDateModal}\n                        selectedDate={this.state.selectedDate}\n                        onTitleClick={this.onTitleClick}\n                        onOk={this.onSeeMoreClick}\n                        onCancel={this.onSeeMoreClick}\n                    />\n                    <EventModal \n                        visible={this.state.showEventModal}\n                        selectedEvent={this.state.selectedEvent}\n                        onOk={this.onEventClick}\n                        onCancel={this.onEventClick}\n                    />\n                </>}\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.fetchAllEvents();\n        this.props.dateEventActions.getMonthDateArray(getDaysInMonth(new Date(), this.state.todayDates));\n    }\n}\n\nconst mapStateToProps = ( store ) => ({\n  dateEvent: store.dateEvent,\n});\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n      dateEventActions: bindActionCreators(DateEventActions, dispatch),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withFirebase(PersonalCalendars));","import firebase from './firebase';\n \nimport React from 'react';\n\nexport default function withFirebase(OriginalComponent) {\n    return class extends React.Component {\n        render() {\n            return <OriginalComponent {...this.props} firebase={firebase}/>\n        }\n    }\n}","import React from 'react';\nimport PersonalCalendars from './Containers/PersonalCalendars/index';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PersonalCalendars />\n    </div>\n  );\n}\n\nexport default App;\n","import { fork } from 'redux-saga/effects'\nimport dateEventList from './DateEvent/sagas';\n\nexport default function* root() {\n  yield fork(dateEventList);\n}","import { \n    GET_MONTH_DATE_ARRAY,\n    ADD_EVENT,\n    SAVE_FETCHED_EVENTS,\n} from './constants';\n\nconst INITIAL_STATE = {\n    monthDateArray: [],\n    events: [],\n    loading: true,\n};\n\nexport function reducer ( state = INITIAL_STATE, action) {\n    switch ( action.type ) {\n        case GET_MONTH_DATE_ARRAY:\n            const monthDateArrayTemp = action.payload.map(week => {\n                return week.map(day => {\n                    if (state.events.filter(element => element.dateText === day.dateText).length>0) {\n                        day.events = [...state.events.filter(element => element.dateText === day.dateText)];\n                    }\n                    return day;\n                })\n            })\n            return {\n                ...state,\n                monthDateArray: monthDateArrayTemp,\n            };\n\n        case ADD_EVENT:\n            const monthDateArray = state.monthDateArray.map(week => {\n                return week.map(day => {\n                    if (day.dateText === action.payload.dateText) {\n                        day.events = [ ...day.events, { ...action.payload.event, dateText: action.payload.dateText } ];\n                    }\n                    return day;\n                })\n            })\n            const events = [ ...state.events, { ...action.payload.event, dateText: action.payload.dateText } ];\n            return {\n                ...state,\n                monthDateArray,\n                events,\n            };\n\n        case SAVE_FETCHED_EVENTS:\n            const monthArray = state.monthDateArray.map(week => {\n                return week.map(day => {\n                    if (action.payload.filter(element => element.dateText === day.dateText).length>0) {\n                        day.events = [...action.payload.filter(element => element.dateText === day.dateText)];\n                    }\n                    return day;\n                })\n            });\n            return {\n                ...state,\n                monthArray,\n                events: action.payload,\n                loading: false,\n            };\n\n        default: {\n                return {\n                    ...state\n                }\n            }\n\n    };\n};","import { reducer as DateEventReducer } from './DateEvent/reducers';\nimport { combineReducers } from 'redux';\n\nexport default (history) => combineReducers({\n  dateEvent: DateEventReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { Provider } from 'react-redux';\nimport createHistory from 'history/createBrowserHistory';\nimport { buildStore } from \"./store\";\nconst history = createHistory();\nconst store = buildStore(history, {});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport { routerMiddleware } from 'react-router-redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from './sagas';\nimport createRootReducers from './reducers';\n\nexport const buildStore = ( history, initialState = {} ) => {\n\tconst sagaMiddleware = createSagaMiddleware(initialState = {});\n \tconst routeMiddleware = routerMiddleware(history);\n \t\n \tconst store = createStore(\n   \t\tcreateRootReducers(history),\n   \t\tinitialState,\n   \t\tcompose( \n    \t\tapplyMiddleware(sagaMiddleware, routeMiddleware)\n   \t\t)\n \t);\n\n \tsagaMiddleware.run(sagas);\n \treturn store;\n}"],"sourceRoot":""}